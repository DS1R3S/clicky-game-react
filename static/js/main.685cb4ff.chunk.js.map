{"version":3,"sources":["Components/Card/Card.js","Components/Wrapper/Wrapper.js","Components/Header/Header.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","onClick","clickCount","id","className","alt","src","image","Wrapper","children","Header","score","highscore","App","state","images","clicked","_this","includes","alert","concat","setState","console","log","push","i","length","j","Math","floor","random","_ref","_this2","this","Components_Wrapper_Wrapper","Components_Header_Header","map","Components_Card_Card","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"unDASeA,SANF,SAAAC,GAAK,OACdC,EAAAC,EAAAC,cAAA,OAAKC,QAAS,kBAAMJ,EAAMK,WAAWL,EAAMM,MACnCL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OAAOC,IAAI,GAAGC,IAAKT,EAAMU,WCErCC,SAJC,SAAAX,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACnCP,EAAMY,YCUIC,SAXA,SAAAb,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SAASP,EAAMY,UAAeX,EAAAC,EAAAC,cAAA,WAC7CF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SAAf,UACYP,EAAMc,MADlB,IACyBb,EAAAC,EAAAC,cAAA,WADzB,eAC+CH,EAAMe,qBCuG9CC,oNA/FbC,MAAQ,CACNC,SACAC,QAAS,GACTL,MAAO,EACPC,UAAW,KAGbV,WAAa,SAAAC,GACX,GAAGc,EAAKH,MAAME,QAAQE,SAASf,GAC7BgB,MAAK,sBAAAC,OAAuBH,EAAKH,MAAMH,QACvCM,EAAKI,SAAS,CACZL,QAAS,GACTL,MAAO,IAETW,QAAQC,IAAIN,EAAKH,YAGjB,GAAuB,IAApBG,EAAKH,MAAMH,MACZQ,MAAM,sBACNF,EAAKI,SAAS,CACZL,QAAS,GACTL,MAAO,EACPC,UAAW,SAER,CACLK,EAAKH,MAAME,QAAQQ,KAAKrB,GAExB,IAAK,IAAIsB,EAAIR,EAAKH,MAAMC,OAAOW,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACrD,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADaM,EAEN,CAACd,EAAKH,MAAMC,OAAOY,GAAIV,EAAKH,MAAMC,OAAOU,IAAvFR,EAAKH,MAAMC,OAAOU,GAFkCM,EAAA,GAE9Bd,EAAKH,MAAMC,OAAOY,GAFYI,EAAA,GAIvDd,EAAKI,SAAS,CAACV,MAAOM,EAAKH,MAAMH,MAAQ,8EA4CtC,IAAAqB,EAAAC,KACP,OACEnC,EAAAC,EAAAC,cAACkC,EAAD,KACEpC,EAAAC,EAAAC,cAACmC,EAAD,CAAQxB,MAAOsB,KAAKnB,MAAMH,MAAOC,UAAWqB,KAAKnB,MAAMF,WAAvD,eACAd,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACd6B,KAAKnB,MAAMC,OAAOqB,IAAI,SAAA7B,GAAK,OAC1BT,EAAAC,EAAAC,cAACqC,EAAD,CACEnC,WAAY8B,EAAK9B,WACjBC,GAAII,EAAMJ,GACVmC,IAAK/B,EAAMJ,GACXI,MAAOA,EAAMA,mBA5FPgC,oBCGlBC,IAASC,OACP3C,EAAAC,EAAAC,cAAC0C,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.685cb4ff.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./Card.css\"\n\nconst Card = props => (\n    <div onClick={() => props.clickCount(props.id)}>\n            <img className=\"item\" alt=\"\" src={props.image} />\n    </div>\n)\n\nexport default Card;","import React from \"react\"\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">\n    {props.children}\n</div>\n\nexport default Wrapper;","import React from \"react\";\nimport \"./Header.css\"\n\nconst Header = props => (\n    <div className=\"header\">\n        <div className=\"title\">{props.children}</div><br></br>\n        <div className=\"score\">\n            Score: {props.score} <br></br> Highscore: {props.highscore}\n        </div>\n\n\n    </div>\n);\n\nexport default Header;","import React, { Component } from \"react\";\nimport Card from \"./Components/Card\";\nimport Wrapper from \"./Components/Wrapper\";\nimport Header from \"./Components/Header\";\nimport images from \"./images.json\";\n// import Jumbotron from \"react-bootstrap/Jumbotron\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting this.state.cards to the cards json array\n  // state = {\n  //   images,\n  //   score: 0,\n  //   highscore: 0\n  // };\n  state = {\n    images,\n    clicked: [],\n    score: 0,\n    highscore: 0\n  }\n\n  clickCount = id => {\n    if(this.state.clicked.includes(id)){\n      alert(`Game Over /n Score:${this.state.score}` );\n      this.setState({\n        clicked: [],\n        score: 0,\n      })\n      console.log(this.state)\n    }\n    else {\n      if(this.state.score == 11) {\n        alert('Congrats! You Won!')\n        this.setState({\n          clicked: [],\n          score: 0,\n          highscore: 12\n        })\n      } else {\n        this.state.clicked.push(id)\n        // Shuffle array of logos. Algorithm found on StackOverflow\n        for (let i = this.state.images.length - 1; i > 0; i--) {\n          let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\n          [this.state.images[i], this.state.images[j]] = [this.state.images[j], this.state.images[i]]; // swap elements\n        }\n        this.setState({score: this.state.score + 1})\n      }\n    }\n  }\n\n  \n\n\n\n  // gameOver = () => {\n  //   if (this.state.score > this.state.highscore) {\n  //     this.setState({highscore: this.state.score}, function() {\n  //       console.log(this.state.highscore);\n  //     })\n  //   } else if (this.state.score === 12){\n  //     alert(\"You Win\")\n  //     this.setState({score: 0})\n  //     return true\n  //   }\n  //   this.state.images.forEach(image => {\n  //     image.count = 0;\n  //   });\n  //   alert(`Try Again \\nScore: ${this.state.score}`);\n  //   this.setState({score: 0});\n  //   return true;\n  // }\n\n  // clickCount = id => {\n  //   this.state.images.find((image, i) => {\n  //     if (image.id === id) {\n  //       if(images[i].count === 0){\n  //         images[i].count = images[i].count + 1;\n  //         this.setState({score : this.state.score + 1}, function(){\n  //           console.log(this.state.score);\n  //         });\n  //         this.state.images.sort(() => Math.random() - 0.5)\n  //         return true; \n  //       } else {\n  //         this.gameOver();\n  //       }\n  //     }\n  //   });\n  // }\n  // Map over this.state.cards and render a cardCard component for each card object\n  render() {\n    return (\n      <Wrapper>\n        <Header score={this.state.score} highscore={this.state.highscore}>Memory Game</Header>\n        <div className=\"container\">\n        {this.state.images.map(image => (\n          <Card\n            clickCount={this.clickCount}\n            id={image.id}\n            key={image.id}\n            image={image.image}\n          />\n        ))}\n        </div>\n        \n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport './index.css';\n\n\n\n\n\n// ========================================\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}